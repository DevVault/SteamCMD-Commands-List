                            app_info_print : Dumps app info for appID
                   device_authorize_status : prints device authorization status
                     get_download_throttle : 
                       install_folder_list : list all mounted Steam volumes
                        package_info_print : Dumps package info for packageID
                                      quit : Stops Steam client console
                               api_logging : api_logging <enabled> <verbose> : enable/disable verbose API logging in steamcmd
                      app_build_all_depots : app_build_all_depots [-desc <text>] -depotconfigpath <folder> -contentroot <folder> -buildoutput <folder> <appid>  : Build all depots for one app
                            app_dlc_status : app_status <appId> <dlcId>
                            app_info_print : Dumps app info for appID
                          app_info_request : <AppID> - Issue an appinfo request for the given appid. Does not wait for results from the server.
                           app_info_update : [0|1] : trigger app info update, optionally for update all
                       app_license_request : <AppID> - Requests a free licenses for this app if not already owned.
                                   app_run : <appId> [LaunchOptionIndex] [Arguments]
                            app_set_config : <AppID> <key> <value> - sets a config value for given app.
                       app_set_update_flag : app_set_update_flag <appId>
                       app_shader_manifest : app_shader_manifest <appId> <manifestid>
                            apps_installed : 
                              apps_running : displays information about running games tracked by Steam 
                                app_status : app_status <appId>
                                  app_stop : <appid> [force:0|1] stop this running app
                             app_uninstall : [-complete] <appId>
                                app_update : app_update <appid> [-validate] [-language <lang>] [-beta <betaname>] [-betapassword <pwd>] make sure a Steam application is up-to-date
                         app_update_cancel : <EAppUpdateError>
                          async_disconnect : async disconnect
                           build_installer : <project file> <target folder> [beta key] [beta pwd]
                                  ceg_wrap : ceg_wrap <appid> <orig filename> <stripped filename> <strips filename> : upload executable to back end for CEG wrapping
                           cm_force_change : Change CM List
                   device_authorize_status : prints device authorization status
                            download_depot : download_depot <appid> <depotid> [<target manifestid>] [<delta manifestid>] [<depot flags filter>]: download a single depot
                          download_sources : Dumps list of download sources
                                  drm_wrap : drm_wrap <appid> <input filename> <output filename> <toolname> <flags> : upload executable to back end for DRM wrapping
                  dump_scheduled_functions : usage: "dump_scheduled_functions" Displays internal Steam function callback timers
                                      exit : Stops Steam client console
                                      find : find substrings in console commands
                         force_install_dir : force_install_dir <directory>
                     get_download_throttle : 
                                      help : Show help information
                                      info : Dump various Steam info
                       install_folder_list : list all mounted Steam volumes
                          licenses_for_app : <appid> : shows active licenses for appid
                            licenses_print : display users's Steam3 licenses
                             log_callbacks : usage: "log_callbacks <first callbackID> [last callbackID]
                                     login : <username> [<password>] [<Steam guard code>] - login to Steam
                                   log_ipc : usage: "log_ipc [counts|verbose] <filter>" Enables IPC logging. Specifying "counts" or "verbose" is optional, defaulting to counts.
                                    logoff : Disconnect from Steam
                                     logon : see 'login'
                                    logout : Disconnect from Steam
                             manifest_dump : <filename>
                                 mem_stats : Dump memory stats
                               net_msgdump : Dumps list of sent net messages
                               net_msgspew : Spews sent net messages
                                  p2p_info : usage: "p2p_info" Displays the current state of the P2P networking subsystem.
                        package_info_print : Dumps package info for packageID
                                      quit : Stops Steam client console
                    render_ipc_connections : usage: "render_ipc_connections
                             run_app_build : run_app_build [-preview] [-desc <text>] <appbuildfile> : run app depot build as specified in appbuildfile
                        run_app_build_http : run_app_build_http : alias for run_app_build
                                 runscript : <scriptfile> - runs a console command script
                     set_download_throttle : set_download_throttle <kbps> <bPersistent = false>
                                  set_spew : <group> <level> <loglevel> set spew levels for the given group
                            set_spew_level : <SpewLevel LogLevel> Sets spew and log level for all groups
                      set_steam_guard_code : <code> - authorize this computer by adding the Steam Guard email code
                       sign_install_script : sign_install_script <appid> <input filename> <output filename> : upload install script to back end for signing
                              test_dropcon : Tests dropping a connection
                      test_failnextconnect : Tests failing the next connection
                    test_opus_voice_encode : test an opus voice encode
                         test_voice_encode : test a voice encode
                  upload_controller_config : upload_controller_config <appid> <filename> : upload controller config to cloud
                              user_friends : Dumps list of friends
                        verify_chunk_store : verify_chunk_store <appid> <depotid> <datafile> : run app depot build as specified in appbuildfile
                                verify_vpk : verify_vpk <datafile> : verifies content of given VPK
                          voice_game_usage : displays information about the game's use of Steam voice
                       workshop_build_item : workshop_build_item <build config filename> : build a workshop item
               workshop_create_legacy_item : workshop_create_legacy_item <appid> <workshop file> : build a legacy workshop item
                    workshop_download_item : workshop_download_item <appid> <PublishedFileId> : download a workshop item
                           workshop_status : workshop_status <appId>
